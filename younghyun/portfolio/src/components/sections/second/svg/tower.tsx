import React, { useEffect, useRef } from "react";
import styled, { css } from "styled-components";

function Tower(props: propsIState) {
  const { isPC, isTablet, secContRef, currentSecRef, currentSecScrollRef } =
    props;
  const pathRefs = [
    useRef<SVGPathElement>(null),
    useRef<SVGPathElement>(null),
    useRef<SVGPathElement>(null),
    useRef<SVGPathElement>(null),
  ];

  useEffect(() => {
    if (secContRef.current) {
      secContRef.current.addEventListener("scroll", () => {
        if (
          (currentSecRef.current === 0 && currentSecScrollRef.current > 0.5) ||
          (currentSecRef.current === 1 && currentSecScrollRef.current < 0.5)
        ) {
          pathRefs.forEach((pathRef) => {
            if (pathRef.current) {
              pathRef.current.style.strokeDashoffset = "0";
            }
          });
        } else {
          pathRefs.forEach((pathRef) => {
            if (pathRef.current) {
              const strokeLength = pathRef.current.getTotalLength();
              pathRef.current.style.strokeDashoffset = `${strokeLength}`;
            }
          });
        }
      });
    }
  });
  return (
    <Container isPC={isPC} isTablet={isTablet}>
      <SVG viewBox="0 0 6 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <Path
          d="M1.57088 15.1026L1.52638 20.1024L4.52626 20.1291L4.57076 15.1293C4.53684 9.77891 3.69542 1.12095 3.19544 1.1165C2.69546 1.11205 1.78197 8.82768 1.57088 15.1026Z"
          strokeLinecap="round"
          ref={pathRefs[0]}
        />
        <Path
          d="M3.90139 19.434C3.95884 19.3909 4.06044 19.2658 4.05534 19.2736C3.98282 19.3842 3.89226 19.5002 3.79915 19.595C3.64531 19.7515 3.46464 19.836 3.24394 19.8341C3.10723 19.8328 3.3169 19.5742 3.35147 19.5246C3.46539 19.3615 3.61056 19.2386 3.69519 19.0555C3.76089 18.9134 3.8315 18.7885 3.90831 18.6569C4.02281 18.4606 3.56714 18.9572 3.39762 19.1086C3.22299 19.2645 3.03607 19.353 2.83997 19.4723C2.73733 19.5348 2.60793 19.5989 2.51981 19.6791C2.3495 19.834 2.5732 19.3549 2.58931 19.3216C2.70578 19.0809 2.86088 18.8707 3.05125 18.6837C3.28369 18.4554 3.47233 18.1965 3.70487 17.968C3.79564 17.8788 3.86002 17.7701 3.94094 17.673C3.98371 17.6217 4.03387 17.5684 4.08549 17.5258C4.12528 17.4928 4.04082 17.7284 4.03584 17.7402C3.90348 18.0515 3.80303 18.3816 3.69838 18.6974C3.57076 19.0827 3.17527 19.4374 2.78895 19.5422C2.63088 19.585 2.45127 19.5911 2.29986 19.6532C2.1618 19.7099 2.24937 19.3137 2.25557 19.2655C2.29749 18.94 2.34096 18.645 2.53807 18.3728C2.69211 18.16 2.832 17.9439 2.97359 17.7228C3.06576 17.5788 3.20078 17.4641 3.29945 17.3225C3.40499 17.171 3.52424 17.0395 3.61904 16.8823C3.71602 16.7215 3.81328 16.5674 3.92827 16.4142C3.95538 16.3781 4.04614 16.3046 4.04901 16.2601C4.05215 16.2114 4.04978 16.19 4.00416 16.2332C3.83978 16.3888 3.67591 16.5403 3.50143 16.685C3.26733 16.8791 2.97362 17.0539 2.77585 17.2886C2.62497 17.4677 2.46239 17.6294 2.2952 17.7937C2.24464 17.8433 2.12635 18.02 2.17691 17.9703C2.29795 17.8514 2.37348 17.6541 2.45292 17.5086C2.76123 16.9439 3.09487 16.3908 3.33167 15.7895C3.52123 15.3081 3.75398 14.8456 3.93462 14.3598C4.01982 14.1306 4.09977 13.9172 4.14893 13.6773C4.15119 13.6662 4.17849 13.5292 4.15269 13.5526C4.06402 13.6333 3.98095 13.7523 3.90867 13.8476C3.51861 14.3613 3.40058 14.9821 3.32006 15.6037C3.24046 16.2183 2.97841 16.816 2.60589 17.3096C2.44152 17.5275 2.23021 17.7143 2.04748 17.9082C2.01198 17.9458 1.91113 18.0495 1.96144 18.0374C2.02251 18.0227 2.13029 17.8285 2.1746 17.782C2.30799 17.642 2.41434 17.4862 2.51163 17.3194C2.97057 16.5326 3.4178 15.7405 3.94087 14.9991C4.18704 14.6502 4.09419 14.1856 3.98603 13.7992C3.88555 13.4401 3.7717 13.0968 3.69844 12.7316C3.63139 12.3973 3.56145 12.0286 3.56449 11.6865C3.56508 11.6205 3.50924 11.7262 3.50572 11.7324C3.36569 11.9788 3.23505 12.2311 3.09852 12.4795C2.92472 12.7957 2.7429 13.1064 2.59924 13.438C2.49804 13.6716 2.44328 13.9178 2.37792 14.1629C2.3452 14.2855 1.7075 16.7469 1.84808 16.7657C1.92242 16.7757 1.95338 16.9425 2.00126 16.9912C2.03162 17.0222 2.20707 16.7543 2.23056 16.7108C2.37738 16.4385 2.57048 16.1843 2.6663 15.887C2.77639 15.5454 2.83832 15.1977 2.86793 14.841C2.9112 14.3199 3.03292 13.7945 3.23436 13.311C3.44389 12.8081 3.50089 12.2357 3.54183 11.6996C3.5668 11.3726 3.62434 11.0627 3.54904 10.7407C3.49284 10.5004 3.49766 10.251 3.42684 10.0154C3.40664 9.94824 3.46889 9.76947 3.40881 9.80571C3.37906 9.82366 3.33243 9.93196 3.32131 9.95083C3.247 10.0769 3.16808 10.2 3.08854 10.3228C2.89273 10.6251 2.69631 10.9271 2.51009 11.2355C2.25146 11.6637 1.96417 12.1699 1.87392 12.6715C1.86214 12.737 1.7736 13.1362 1.88039 13.1371C1.95293 13.1378 1.99401 13.1194 2.04025 13.0577C2.23555 12.797 2.42427 12.4705 2.54687 12.1695C2.64949 11.9177 2.69452 11.6435 2.82692 11.4028C2.97652 11.1308 3.09977 10.8389 3.29172 10.5925C3.45934 10.3773 3.66794 10.1841 3.75795 9.92023C3.82986 9.70943 3.91552 9.49205 3.93882 9.26928C3.95466 9.11778 3.97496 8.96342 3.97208 8.81066C3.96734 8.5596 3.84043 8.29799 3.78912 8.05699C3.76698 7.95299 3.73035 7.97521 3.64734 8.04114C3.33112 8.29234 3.03414 8.6322 2.8827 9.01053C2.82352 9.15836 2.76019 9.29332 2.71436 9.44539C2.65546 9.64087 2.66605 9.84116 2.59106 10.0358C2.55007 10.1423 2.52975 10.2454 2.47818 10.3492C2.43634 10.4334 2.41029 10.5246 2.36184 10.6055C2.33447 10.6511 2.27947 10.6962 2.26507 10.7478C2.19564 10.9969 2.66731 10.4158 2.82427 10.2103C2.97759 10.0097 3.17873 9.82371 3.28469 9.59372C3.41946 9.30123 3.44523 8.99269 3.44807 8.67336C3.45017 8.43735 3.45519 8.20117 3.45437 7.96515C3.45351 7.7137 3.4111 7.46285 3.41334 7.21142C3.41527 6.99387 3.44108 6.77636 3.443 6.56045C3.44357 6.4973 3.49966 6.26682 3.45722 6.45314C3.37547 6.81214 3.23422 7.19417 3.10007 7.53757C3.03914 7.69354 3.00506 7.90093 2.90199 8.03583C2.78394 8.19034 2.63294 8.30256 2.53729 8.47691C2.52255 8.50378 2.46666 8.55757 2.47393 8.59174C2.48292 8.63394 2.54749 8.57749 2.55509 8.56328C2.62389 8.43473 2.6297 8.27245 2.65443 8.13178C2.67925 7.99063 2.72297 7.85378 2.75233 7.71353C2.83913 7.29872 2.86046 6.84762 3.06184 6.46819C3.18379 6.23842 3.3333 6.00232 3.4355 5.76458C3.46938 5.68575 3.53061 5.58278 3.54662 5.49897C3.55763 5.44134 3.56996 5.37999 3.5734 5.32148C3.57448 5.30317 3.62059 5.14872 3.58091 5.2234C3.45606 5.45836 3.275 5.65779 3.13865 5.88528C3.08161 5.98046 3.00604 6.10785 2.9159 6.1751C2.81476 6.25055 2.88773 5.92111 2.90012 5.86194C2.93902 5.67604 2.9753 5.46197 2.977 5.27107C2.97801 5.15722 3.00243 5.01367 3.03331 4.9055C3.12911 4.56992 3.22095 4.16604 3.13852 3.81353C3.07078 3.52384 2.99505 3.09987 3.0944 2.81042"
          strokeLinecap="round"
          ref={pathRefs[1]}
        />
        <Path
          d="M0.753685 21L0.729995 23.107L5.27315 23.1391L5.29684 21.032L0.753685 21Z"
          strokeLinecap="round"
          ref={pathRefs[2]}
        />
        <Path
          d="M4.42064 22.9789C4.47247 22.808 4.64119 22.7709 4.76165 22.6468C4.81436 22.5925 4.91998 22.5662 4.92085 22.4867C4.92111 22.4629 4.93405 22.4076 4.91818 22.3878C4.87251 22.3308 4.61205 22.508 4.573 22.5291C4.4599 22.5902 4.34916 22.6465 4.22019 22.6826C4.07795 22.7225 3.92332 22.7103 3.77616 22.7212C3.6292 22.7321 3.39613 22.7193 3.27541 22.8053C3.1098 22.9234 3.64465 22.6105 3.82966 22.5135C4.1103 22.3664 4.28847 22.1141 4.48239 21.9C4.61214 21.7568 4.81308 21.6665 4.95133 21.5249C5.00902 21.4659 5.03445 21.4417 4.92284 21.5013C4.69734 21.6217 4.47019 21.7447 4.25398 21.8759C4.0352 22.0087 3.80176 22.1568 3.63542 22.3346C3.55356 22.4221 3.44009 22.4849 3.35048 22.5671C3.24241 22.6664 3.14753 22.7525 3.0152 22.832C2.92594 22.8856 2.83204 22.9537 2.73351 22.9952C2.73122 22.9962 2.61566 23.0372 2.65682 23.0375C2.7455 23.0382 2.89166 22.8523 2.94297 22.809C3.15927 22.6266 3.3993 22.4645 3.60609 22.2742C3.84597 22.0534 4.03809 21.7931 4.29092 21.5824C4.34601 21.5365 4.41513 21.4856 4.45999 21.4326C4.59121 21.2777 4.35139 21.4027 4.27994 21.4425C3.93644 21.6342 3.58081 21.811 3.24038 22.0063C3.02218 22.1314 2.77322 22.2612 2.60468 22.4332C2.47123 22.5693 2.34765 22.7076 2.17815 22.8157C2.1447 22.837 2.06651 22.9113 2.15019 22.8584C2.21307 22.8186 2.26068 22.754 2.3143 22.7065C2.43015 22.6039 2.55003 22.5047 2.65881 22.3969C2.92628 22.1317 3.17532 21.8506 3.43373 21.5792C3.5041 21.5053 3.58399 21.4377 3.65971 21.3676C3.79402 21.2434 3.44795 21.4001 3.42809 21.4088C2.86867 21.6544 2.30636 21.9429 1.86368 22.3176C1.78246 22.3864 1.71752 22.4674 1.62648 22.5271C1.58815 22.5522 1.5507 22.5766 1.51196 22.6007C1.46739 22.6285 1.46707 22.6468 1.5106 22.6109C1.61796 22.5223 1.706 22.4047 1.8063 22.309C1.99845 22.1259 2.19892 21.9551 2.36342 21.754C2.45079 21.6473 2.53158 21.5376 2.6032 21.4232C2.63945 21.3653 2.70244 21.3034 2.72762 21.2435C2.73809 21.2186 2.66939 21.2665 2.64224 21.2807C2.53512 21.3367 2.428 21.3926 2.32175 21.4497C2.05828 21.5914 1.85334 21.755 1.64282 21.9447C1.49274 22.0799 1.36664 22.2494 1.25543 22.405C1.20189 22.48 1.12414 22.5287 1.06466 22.5954C1.02392 22.6411 1.15443 22.5083 1.18737 22.4586C1.2594 22.3499 1.32507 22.2368 1.40461 22.1317C1.52633 21.9708 1.62365 21.7787 1.71401 21.6045C1.74094 21.5525 1.78475 21.4943 1.80078 21.4398C1.81473 21.3924 1.55433 21.501 1.53514 21.5062C1.42349 21.537 1.26395 21.6231 1.26544 21.4869"
          strokeLinecap="round"
          ref={pathRefs[3]}
        />
      </SVG>
    </Container>
  );
}

export default Tower;

interface propsIState {
  isPC: boolean;
  isTablet: boolean;
  secContRef: React.RefObject<HTMLDivElement>;
  currentSecRef: React.MutableRefObject<number>;
  currentSecScrollRef: React.MutableRefObject<number>;
}

const Container = styled.div<{ isPC: boolean; isTablet: boolean }>`
  width: 100%;
  height: ${(props) => (props.isPC ? "90" : props.isTablet ? "75" : "50")}%;

  position: absolute;
  bottom: 0;
  left: ${(props) => (props.isPC ? "100" : "50")}%;

  ${(props) =>
    props.isPC
      ? css`
          transform: translate3d(-80%, 3%, 0);
          opacity: 1;
        `
      : css`
          transform: translate3d(-50%, 3%, 0);
          opacity: 1;
        `}
`;

const SVG = styled.svg`
  width: 100%;
  height: 100%;
`;

const Path = styled.path`
  stroke: ${({ theme }: { theme: ThemeIState }) => theme.third};

  transition: all 4.2s ease-in-out;

  &:nth-child(1) {
    stroke-dasharray: 41.29548263549805;
    stroke-dashoffset: 41.29548263549805;
  }
  &:nth-child(2) {
    stroke-dasharray: 75.79521179199219;
    stroke-dashoffset: 75.79521179199219;
  }
  &:nth-child(3) {
    stroke-dasharray: 13.3009033203125;
    stroke-dashoffset: 13.3009033203125;
  }
  &:nth-child(4) {
    stroke-dasharray: 23.935726165771484;
    stroke-dashoffset: 23.935726165771484;
  }
`;
